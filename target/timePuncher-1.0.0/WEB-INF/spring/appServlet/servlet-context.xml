<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	
	<mvc:annotation-driven>
		<!-- JSON Converter -->
		<mvc:message-converters>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>application/json</beans:value>
					</beans:list>
				</beans:property>
				<beans:property name="objectMapper" ref="jacksonObjectMapper"></beans:property>
			</beans:bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Jackson Mapper for REST Controllers :Provides Better Defaults. For Ex: DEFAULT_VIEW_INCLUSION is set to false  -->
	<beans:bean id="jacksonObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Scan base packages -->
	<context:component-scan base-package="com.jordanalphonso.timePuncher" />
	
	<!-- database properties file -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>resources/database.properties</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"/>
		<beans:property name="url" value="${jdbc.url}"/>
		<beans:property name="username" value="${jdbc.username}"/>
		<beans:property name="password" value="${jdbc.password}"/>
	</beans:bean>
	
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.jordanalphonso.timePuncher.model.User</beans:value>
				<beans:value>com.jordanalphonso.timePuncher.model.BasicInfo</beans:value>
				<beans:value>com.jordanalphonso.timePuncher.model.WorkInfo</beans:value>
				<beans:value>com.jordanalphonso.timePuncher.model.Authority</beans:value>
				<beans:value>com.jordanalphonso.timePuncher.model.Punches</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>

	<!-- User DAO & SERVICE -->
  	<beans:bean id="userDao" class="com.jordanalphonso.timePuncher.dao.UserDao.UserDao">
  		<beans:property name="sessionFactory" ref="sessionFactory"/>
  	</beans:bean>
  	<beans:bean id="userService" class="com.jordanalphonso.timePuncher.dao.UserDao.UserService">
  		<beans:property name="userDao" ref="userDao"/>
  	</beans:bean>
  	
  	<!-- BasicInfo DAO & SERVCIE -->
  	<beans:bean id="basicInfoDao" class="com.jordanalphonso.timePuncher.dao.Info.BasicInfoDao">
  		<beans:property name="sessionFactory" ref="sessionFactory"/>
  	</beans:bean>
  	<beans:bean id="basicInfoService" class="com.jordanalphonso.timePuncher.services.BasicInfoService">
  		<beans:property name="basicInfoDao" ref="basicInfoDao"/>
  	</beans:bean>
  	
  	<!-- WorkInfo DAO & SERVICE -->
  	<beans:bean id="workInfoDao" class="com.jordanalphonso.timePuncher.dao.Info.WorkInfoDao">
  		<beans:property name="sessionFactory" ref="sessionFactory"/>
  	</beans:bean>
  	<beans:bean id="workInfoService" class="com.jordanalphonso.timePuncher.services.WorkInfoService">
  		<beans:property name="workInfoDao" ref="workInfoDao"/>
  	</beans:bean>
  	
  	<!-- Authority DAO & SERVICE -->
  	<beans:bean id="authorityDao" class="com.jordanalphonso.timePuncher.dao.Info.AuthorityDao">
  		<beans:property name="sessionFactory" ref="sessionFactory"/>
  	</beans:bean>
  	<beans:bean id="authorityService" class="com.jordanalphonso.timePuncher.services.AuthorityService">
  		<beans:property name="authorityDao" ref="authorityDao"/>
  	</beans:bean>
  	
  	<!-- Punches DAO & SERVICE -->
  	<beans:bean id="punchesDao" class="com.jordanalphonso.timePuncher.dao.Punches.PunchesDao">
  		<beans:property name="sessionFactory" ref="sessionFactory"/>
  	</beans:bean>
  	<beans:bean id="punchesService" class="com.jordanalphonso.timePuncher.dao.Punches.PunchesService">
  		<beans:property name="punchesDao" ref="punchesDao"/>
  		<beans:property name="punchLogic" ref="punchLogic"/>
  	</beans:bean>
  	
  	<!-- Punch Logic Beans -->
  	<beans:bean id="punchLogic" class="com.jordanalphonso.timePuncher.PunchLogic.PunchLogic">
  		<beans:property name="punchesDao" ref="punchesDao"/>
  	</beans:bean>
  	
	
</beans:beans>
